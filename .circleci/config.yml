version: 2.1
orbs:
  cypress: cypress-io/cypress@1
executors:
  test-in-staging:
    docker:
      - image: 'cypress/browsers:node12.4.0-chrome76'
        auth:
          username: ${DOCKER_HUB_ID}
          password: ${DOCKER_HUB_PWD}
    environment:
        REACT_APP_API_KEY: 'https://staging-api-platform-dot-gcp-and-physna.uc.r.appspot.com/'
workflows:
    version: 2
    deploy-gcloud:
      jobs:
        - cypress/run:
            executor: test-in-staging
            context: gcp-and-physna
            yarn: true
            start: yarn run build:workers && yarn dev
            wait-on: 'https://localhost:3000'
            store_artifacts: true
            browser: chrome
            verify-command: yarn cypress verify
            filters:
              branches:
                only:
                  - development
        - deploy-staging:
            context: gcp-and-physna
            filters:
              branches:
                only:
                  - master
        - deploy-production:
            Stack: master
            context: gcp-and-physna
            filters:
              branches:
                only:
                  - master
        - deploy-development-thangs:
            context: thangs-context
            filters:
              branches:
                only:
                  - development

jobs:
  deploy-staging:
    docker:
      - image: google/cloud-sdk:303.0.0
        auth:
          username: ${DOCKER_HUB_ID}
          password: ${DOCKER_HUB_PWD}
    parameters:
      NoPromote:
        default: "" # "--no-promote"
        type: string
        description: "add --no-promote to deploy without routing traffic to new version"
      Version:
        default: "--version \"${CIRCLE_SHA1:0:8}\""
        type: string
        description: "add --version someVersionName if you want to assign a version"
      Stack:
        default: ${CIRCLE_BRANCH}
        type: string
    steps:
      - checkout
      - run:
          name: Install node
          command: |
            curl -sL https://deb.nodesource.com/setup_12.x | bash -
            apt-get install -y nodejs
      - run:
          name: Install yarn
          command: |
            curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -
            echo "deb https://dl.yarnpkg.com/debian/ stable main" | tee /etc/apt/sources.list.d/yarn.list
            apt update && apt install yarn
      - run:
          name: Check node & yarn versions
          command: |
            node -v
            yarn -v
      - restore_cache:
          name: Restore yarn packages from cache
          keys:
            - yarn-packages-{{ checksum "yarn.lock" }}
      - run:
          name: Install dependencies
          command: yarn install --frozen-lockfile
      - save_cache:
          name: Save yarn packages to cache
          key: yarn-packages-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn
      - run:
          name: Build workers
          command: yarn build:workers
      - run:
          name: "Build release"
          command: |
            yarn build:staging
            VERSION=`git rev-parse --short HEAD`
            sed -i -- "s/%VERSION%/$VERSION/g" build/index.html
      - run:
          name: "Build Storybook"
          command: yarn build:storybook
      - run:
          name: "Deploy build"
          command: |
            # Store service account
            echo ${GCLOUD_SERVICE_KEY} > ${HOME}/gcloud-service-key.json
            # Initialize gcloud CLI
            gcloud auth activate-service-account --key-file=${HOME}/gcloud-service-key.json
            gcloud --quiet config set project ${GOOGLE_PROJECT_ID}
            gcloud --quiet config set compute/zone ${GOOGLE_COMPUTE_ZONE}
            gcloud app deploy --quiet development.yaml <<parameters.NoPromote>> <<parameters.Version>>
  deploy-production:
    docker:
      - image: google/cloud-sdk
        auth:
          username: ${DOCKER_HUB_ID}
          password: ${DOCKER_HUB_PWD}
    parameters:
      NoPromote:
        default: "--no-promote"
        type: string
        description: "add --no-promote to deploy without routing traffic to new version"
      Version:
        default: "--version \"${CIRCLE_SHA1:0:8}\""
        type: string
        description: "add --version someVersionName if you want to assign a version"
      Stack:
        default: ${CIRCLE_BRANCH}
        type: string
    steps:
      - checkout
      - run:
          name: Install node
          command: |
            curl -sL https://deb.nodesource.com/setup_12.x | bash -
            apt-get install -y nodejs
      - run:
          name: Install yarn
          command: |
            curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -
            echo "deb https://dl.yarnpkg.com/debian/ stable main" | tee /etc/apt/sources.list.d/yarn.list
            apt update && apt install yarn
      - run:
          name: Check node & yarn versions
          command: |
            node -v
            yarn -v
      - restore_cache:
          name: Restore yarn packages from cache
          keys:
            - yarn-packages-{{ checksum "yarn.lock" }}
      - run:
          name: Install dependencies
          command: yarn install --frozen-lockfile
      - save_cache:
          name: Save yarn packages to cache
          key: yarn-packages-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn
      - run:
          name: Build workers
          command: yarn build:workers
      - run:
          name: "Build release"
          command: |
            yarn build
            VERSION=`git rev-parse --short HEAD`
            sed -i -- "s/%VERSION%/$VERSION/g" build/index.html
      - run:
          name: "Deploy build"
          command: |
            # Store service account
            echo ${GCLOUD_SERVICE_KEY} > ${HOME}/gcloud-service-key.json
            # Initialize gcloud CLI
            gcloud auth activate-service-account --key-file=${HOME}/gcloud-service-key.json
            gcloud --quiet config set project ${GOOGLE_PROJECT_ID}
            gcloud --quiet config set compute/zone ${GOOGLE_COMPUTE_ZONE}
            gcloud app deploy --quiet development.yaml <<parameters.NoPromote>> <<parameters.Version>>
  deploy-development-thangs:
    docker:
      - image: google/cloud-sdk:303.0.0
        auth:
          username: ${DOCKER_HUB_ID}
          password: ${DOCKER_HUB_PWD}
    parameters:
      NoPromote:
        default: "" # "--no-promote"
        type: string
        description: "add --no-promote to deploy without routing traffic to new version"
      Version:
        default: "--version \"${CIRCLE_SHA1:0:8}\""
        type: string
        description: "add --version someVersionName if you want to assign a version"
      Stack:
        default: "development-thangs" #${CIRCLE_BRANCH}
        type: string
    steps:
      - checkout
      - run:
          name: Install node
          command: |
            curl -sL https://deb.nodesource.com/setup_12.x | bash -
            apt-get install -y nodejs
      - run:
          name: Install yarn
          command: |
            curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -
            echo "deb https://dl.yarnpkg.com/debian/ stable main" | tee /etc/apt/sources.list.d/yarn.list
            apt update && apt install yarn
      - run:
          name: Check node & yarn versions
          command: |
            node -v
            yarn -v
      - restore_cache:
          name: Restore yarn packages from cache
          keys:
            - yarn-packages-{{ checksum "yarn.lock" }}
      - run:
          name: Install dependencies
          command: yarn install --frozen-lockfile
      - save_cache:
          name: Save yarn packages to cache
          key: yarn-packages-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn
      - run:
          name: Build workers
          command: yarn build:workers
      - run:
          name: "Build release"
          command: |
            yarn build:development
            VERSION=`git rev-parse --short HEAD`
            sed -i -- "s/%VERSION%/$VERSION/g" build/index.html
      - run:
          name: "Deploy build"
          command: |
            # Store service account
            echo ${GCLOUD_SERVICE_KEY} > ${HOME}/gcloud-service-key.json
            # Initialize gcloud CLI
            gcloud auth activate-service-account --key-file=${HOME}/gcloud-service-key.json
            gcloud --quiet config set project ${GOOGLE_PROJECT_ID}
            gcloud --quiet config set compute/zone ${GOOGLE_COMPUTE_ZONE}
            gcloud app deploy --quiet <<parameters.Stack>>.yaml <<parameters.NoPromote>> <<parameters.Version>>
